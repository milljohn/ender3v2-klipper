# This file contains common pin mappings for the BIGTREETECH SKR mini
# E3 v3.0. To use this config, the firmware should be compiled for the
# STM32G0B1 with a "8KiB bootloader" and USB communication.

# The "make flash" command does not work on the SKR mini E3. Instead,
# after running "make", copy the generated "out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the SKR
# mini E3 with that SD card.

# See docs/Config_Reference.md for a description of parameters.
[include mainsail.cfg]

# [include EZABL.cfg]

[include macros.cfg]

[include timelapse.cfg]

[include Adaptive_Meshing.cfg]

[include Line_Purge.cfg]

[exclude_object]


[respond]
#default_type: echo
#   Sets the default prefix of the "M118" and "RESPOND" output to one
#   of the following:
#       echo: "echo: " (This is the default)
#       command: "// "
#       error: "!! "
default_prefix: 
#   Directly sets the default prefix. If present, this value will
#   override the "default_type".

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

[stepper_x]
step_pin: PB13
dir_pin: !PB12
enable_pin: !PB14
microsteps: 16
rotation_distance: 40
endstop_pin: ^PC0
position_endstop: 0
position_max: 235
homing_speed: 150

[tmc2209 stepper_x]
uart_pin: PC11
tx_pin: PC10
uart_address: 0
run_current: 0.580
stealthchop_threshold: 999999

[stepper_y]
step_pin: PB10
dir_pin: !PB2
enable_pin: !PB11
microsteps: 16
rotation_distance: 40
endstop_pin: ^PC1
position_endstop: 0
position_max: 235
homing_speed: 150

[tmc2209 stepper_y]
uart_pin: PC11
tx_pin: PC10
uart_address: 2
run_current: 0.580
stealthchop_threshold: 999999

[stepper_z]
step_pin: PB0
dir_pin: PC5
enable_pin: !PB1
microsteps: 16
rotation_distance: 8
# endstop_pin: ^PC2
endstop_pin: probe:z_virtual_endstop
# position_endstop: 0.0
position_max: 250

[tmc2209 stepper_z]
uart_pin: PC11
tx_pin: PC10
uart_address: 1
run_current: 0.580
stealthchop_threshold: 999999

[extruder]
max_extrude_only_distance: 100.0
max_extrude_cross_section: 5
step_pin: PB3
dir_pin: !PB4
enable_pin: !PD1
microsteps: 16
rotation_distance: 34.406
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PC8
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA0
control: pid
pid_Kp: 21.527
pid_Ki: 1.063
pid_Kd: 108.982
min_temp: 0
max_temp: 250

[tmc2209 extruder]
uart_pin: PC11
tx_pin: PC10
uart_address: 3
run_current: 0.650
stealthchop_threshold: 999999

[heater_bed]
heater_pin: PC9
# sensor_type: ATC Semitec 104GT-2
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC4
control: pid
pid_Kp: 54.027
pid_Ki: 0.770
pid_Kd: 948.182
min_temp: 0
max_temp: 130

[heater_fan heatbreak_cooling_fan]
pin: PC7

[heater_fan controller_fan]
pin: PB15

[fan]
pin: PC6

[mcu]
# serial: /dev/serial/by-id/usb-Klipper_Klipper_firmware_12345-if00
serial: /dev/serial0
restart_method: command


[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 3000
max_z_velocity: 5
max_z_accel: 100
square_corner_velocity: 5

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PB5,  EXP1_3=PA9,   EXP1_5=PA10, EXP1_7=PB8, EXP1_9=<GND>,
    EXP1_2=PA15, EXP1_4=<RST>, EXP1_6=PB9,  EXP1_8=PD6, EXP1_10=<5V>

# See the sample-lcd.cfg file for definitions of common LCD displays.
[display]
lcd_type: st7920
cs_pin: EXP1_7
sclk_pin: EXP1_6
sid_pin: EXP1_8
encoder_pins: ^EXP1_5, ^EXP1_3
click_pin: ^!EXP1_2

[output_pin beeper]
pin: EXP1_1

[probe] 
pin: ^!PC2             #### MUST BE SET #####
#   Probe detection pin. The Signal pin going to the EZABL
x_offset: -44       #### MUST BE SET #####
#   The distance (in mm) between the probe and the nozzle along the
#   x-axis. The default is 0.
#   If the probe is LEFT of the nozzle, this number is negative. (ex: -12)
#   If the probe is RIGHT of the nozzle, this number is positive. (ex: 12)
y_offset: -10        #### MUST BE SET #####
#   The distance (in mm) between the probe and the nozzle along the
#   y-axis. The default is 0.
#   If the probe is AHEAD of the nozzle, this number is negative. (ex: -12)
#   If the probe is BEHIND of the nozzles, this number is positive. (ex: 12)
#z_offset: 1.804
#   The distance (in mm) between the bed and the nozzle when the probe
#   triggers. This parameter must be provided and must be a POSITIVE number (ex: 2.1)
speed: 5		#### UF standard is 5mm/s, 8mm/s for FastProbe and 15mm/s for Superfast####
#   Speed (in mm/s) of the Z axis when probing. The default is 5mm/s.
samples: 2      ### UF Standard is 2####
#   The number of times to probe each point. The probed z-values will
#   be averaged. The default is to probe 1 time.
#sample_retract_dist: 2.0
#   The distance (in mm) to lift the toolhead between each sample (if
#   sampling more than once). The default is 2mm.
#samples_result: average
#   The calculation method when sampling more than once - either
#   "median" or "average". The default is average.
#samples_tolerance: 0.100
#   The maximum Z distance (in mm) that a sample may differ from other
#   samples. If this tolerance is exceeded then either an error is
#   reported or the attempt is restarted (see
#   samples_tolerance_retries). The default is 0.100mm.
lift_speed: 8


#### Z Safe Home ####

[safe_z_home]
home_xy_position: 164, 130        #### MUST BE SET ##### Can be calculated at https://www.th3dstudio.com/klipper-abl-mesh-homing-calculator/ 
#   A X, Y coordinate (e.g. 100, 100) where the Z homing should be
#   performed. This parameter must be provided.
#speed: 50.0
#   Speed at which the toolhead is moved to the safe Z home
#   coordinate. The default is 50 mm/s
z_hop: 5  #### UF Standard is 5mm ####
#   Distance (in mm) to lift the Z axis prior to homing. This is
#   applied to any homing command, even if it doesn't home the Z axis.
#   If the Z axis is already homed and the current Z position is less
#   than z_hop, then this will lift the head to a height of z_hop. If
#   the Z axis is not already homed the head is lifted by z_hop.
#   The default is to not implement Z hop.
z_hop_speed: 10.0
#   Speed (in mm/s) at which the Z axis is lifted prior to homing. The
#   default is 15 mm/s.


#### BED MESH ####

[bed_mesh]
speed: 150
#   The speed (in mm/s) of non-probing moves during the calibration.
#   The default is 50.
#horizontal_move_z: 5
#   The height (in mm) that the head should be commanded to move to
#   just prior to starting a probe operation. The default is 5.
mesh_min: 5, 5          #### MUST BE SET ##### Can be calculated at https://www.th3dstudio.com/klipper-abl-mesh-homing-calculator/ 
#   Defines the minimum X, Y coordinate of the mesh for rectangular
#   beds. This coordinate is relative to the probe's location. This
#   will be the first point probed, nearest to the origin. This
#   parameter must be provided for rectangular beds.
mesh_max: 181, 215          #### MUST BE SET ##### Can be calculated at https://www.th3dstudio.com/klipper-abl-mesh-homing-calculator/ 
#   Defines the maximum X, Y coordinate of the mesh for rectangular
#   beds. Adheres to the same principle as mesh_min, however this will
#   be the furthest point probed from the bed's origin. This parameter
#   must be provided for rectangular beds.
probe_count: 6, 6 #### UF standard is 3, 3 ####
#   For rectangular beds, this is a comma separate pair of integer
#   values X, Y defining the number of points to probe along each
#   axis. A single value is also valid, in which case that value will
#   be applied to both axes. Default is 3, 3.
# algorithm: bicubic
fade_start: 1
fade_end: 10
fade_target: 0

# [bed_mesh]
# speed: 120
# horizontal_move_z: 8
# mesh_min: 15,15
# mesh_max: 188,186
# probe_count: 7,7
# algorithm: bicubic
# fade_start: 1
# fade_end: 10
# fade_target: 0

## uncomment this section if you use a bltouch
# [bltouch]
# sensor_pin: ^PB1
# control_pin: PB0
# x_offset: -31.8
# y_offset: -40.5
# #z_offset: 4  # z_offset is saved in SAVE_CONFIG section below
# speed:35
# samples:3
# samples_result: median
# samples_tolerance: 0.0075
# samples_tolerance_retries: 10
# probe_with_touch_mode: true
# stow_on_each_sample: false

#====================================================================
# SAFE Z HOME
#====================================================================

# [safe_z_home]
# home_xy_position: 147, 154
# speed: 75
# z_hop: 10
# z_hop_speed: 5
# move_to_previous: true

#====================================================================
# SCREW ADJUSTMENT
#====================================================================

[bed_screws]
screw1: 25, 205 # Using rear left to take measurements as harder to reach
screw1_name: rear left screw
screw2: 195, 205
screw2_name: rear right screw
screw3: 195, 35
screw3_name: front right screw
screw4: 25, 35
screw4_name: front left screw

[screws_tilt_adjust]
screw1: 57, 229
screw1_name: rear left screw
screw2: 227, 229
screw2_name: rear right screw
screw3: 227, 70
screw3_name: front right screw
screw4: 57, 70
screw4_name: front left screw
horizontal_move_z: 10
speed: 50
screw_thread: CW-M4 # Use CW for Clockwise and CCW for Counter Clockwise 

#====================================================================
# INPUT SHAPER
#====================================================================

# Klipper supports Input Shaping - a technique that can be used to
# reduce ringing (also known as echoing, ghosting or rippling) in
# prints. Ringing is a surface printing defect when, typically,
# elements like edges repeat themselves on a printed surface as a
# subtle 'echo':

# Every printer is different and the ringing frequency depends on
# the printer's mechanical properties. The ringing frequency can be
# measured by printing a simple test object and measuring the
# distance between the echoes. The ringing frequency is typically
# between 50 and 100 Hz.

# https://www.klipper3d.org/Resonance_Compensation.html

# Uncomment the following lines to enable input shaping. The
# shaper_freq_x and shaper_freq_y parameters should be set to the
# ringing frequency of the printer. 

# MANUAL SETUP
# [input_shaper]
# shaper_freq_x: 54.85
# shaper_type_x: ei
# shaper_freq_y: 57.52
# shaper_type_y: mzv

# # ADXL345 SETUP
# [input_shaper]
# shaper_freq_x: 68.8
# shaper_type_x: mzv
# shaper_freq_y: 44.4
# shaper_type_y: mzv

# Set up your accelerometer using the following link https://www.klipper3d.org/Measuring_Resonances.html

# # [mcu rpi]
# # serial: /tmp/klipper_host_mcu

# [adxl345]
# cs_pin: rpi:None

# [resonance_tester]
# accel_chip: adxl345
# probe_points:
#     117, 117, 20  # home probe point

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.317500, 0.160000, -0.023750
#*# 	0.228750, 0.075000, -0.108750
#*# 	0.162500, -0.010000, -0.203750
#*# x_count = 3
#*# y_count = 3
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 76.9
#*# max_x = 142.34
#*# min_y = 94.56
#*# max_y = 128.1
#*#
#*# [extruder]
#*#
#*# [heater_bed]
#*#
#*# [probe]
#*# z_offset = 0.179
